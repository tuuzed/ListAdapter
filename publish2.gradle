apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'


group = project.group ?: rootProject.group
version = project.version ?: rootProject.version

def siteUrl = "https://github.com/tuuzed/recyclerview-adapter"
def gitUrl = "${siteUrl}.git"
def issueUrl = "${siteUrl}/issues"

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'maven'
        name = "$group:${project.name}"
        desc = 'Recyclerview Adapter'
        websiteUrl = siteUrl
        issueTrackerUrl = issueUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = ['aar', 'android', 'adapter', "recyclerview"]
        publicDownloadNumbers = true
        publish = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name "$group:${project.name}"
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'TuuZed'
                        name 'TuuZed'
                        email 'liuyonghui.job@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

// task javadoc(type: Javadoc) {
//     source = android.sourceSets.main.java.srcDirs
//     classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
// }

// task javadocJar(type: Jar, dependsOn: javadoc) {
//     classifier = 'javadoc'
//     from javadoc.destinationDir
// }

artifacts {
    // archives javadocJar
    archives sourcesJar
}